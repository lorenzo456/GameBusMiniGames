{"version":3,"sources":["./node_modules/@capacitor/core/dist/index.js","./node_modules/@capacitor/network/dist/esm/definitions.js","./node_modules/@capacitor/network/dist/esm/index.js","./node_modules/rxjs/_esm2015/internal/operators/retry.js","./src/app/services/api.service.ts","./src/app/services/api2.service.ts","./src/app/shared/pipes/unescape.pipe.ts","./src/app/shared/shared.module.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA,mCAAmC,cAAc;AACjD;AACA,0BAA0B,cAAc;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,YAAY;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,sCAAsC;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,oDAAoD;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oDAAoD,QAAQ,0GAA0G;AACtK;AACA;AACA;AACA,iCAAiC,WAAW,uCAAuC,KAAK;AACxF;AACA;AACA,qEAAqE;AACrE;AACA;AACA,8CAA8C,WAAW;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAiD,WAAW,iCAAiC,SAAS;AACtG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yDAAyD,WAAW,GAAG,KAAK,4BAA4B,SAAS;AACjH;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,gBAAgB,IAAI,mBAAmB;AAC/E;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,sCAAsC,YAAY;AAClD;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,sEAAsE,SAAS;AAC/E;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC;AAClC;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAiD,YAAY;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,SAAS;AAC5C;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEsK;AACtK;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","file":"default-src_app_services_api_service_ts-src_app_shared_shared_module_ts.js","sourcesContent":["/*! Capacitor: https://capacitorjs.com/ - MIT License */\nconst createCapacitorPlatforms = (win) => {\n    const defaultPlatformMap = new Map();\n    defaultPlatformMap.set('web', { name: 'web' });\n    const capPlatforms = win.CapacitorPlatforms || {\n        currentPlatform: { name: 'web' },\n        platforms: defaultPlatformMap,\n    };\n    const addPlatform = (name, platform) => {\n        capPlatforms.platforms.set(name, platform);\n    };\n    const setPlatform = (name) => {\n        if (capPlatforms.platforms.has(name)) {\n            capPlatforms.currentPlatform = capPlatforms.platforms.get(name);\n        }\n    };\n    capPlatforms.addPlatform = addPlatform;\n    capPlatforms.setPlatform = setPlatform;\n    return capPlatforms;\n};\nconst initPlatforms = (win) => (win.CapacitorPlatforms = createCapacitorPlatforms(win));\n/**\n * @deprecated Set `CapacitorCustomPlatform` on the window object prior to runtime executing in the web app instead\n */\nconst CapacitorPlatforms = /*#__PURE__*/ initPlatforms((typeof globalThis !== 'undefined'\n    ? globalThis\n    : typeof self !== 'undefined'\n        ? self\n        : typeof window !== 'undefined'\n            ? window\n            : typeof global !== 'undefined'\n                ? global\n                : {}));\n/**\n * @deprecated Set `CapacitorCustomPlatform` on the window object prior to runtime executing in the web app instead\n */\nconst addPlatform = CapacitorPlatforms.addPlatform;\n/**\n * @deprecated Set `CapacitorCustomPlatform` on the window object prior to runtime executing in the web app instead\n */\nconst setPlatform = CapacitorPlatforms.setPlatform;\n\nconst legacyRegisterWebPlugin = (cap, webPlugin) => {\n    var _a;\n    const config = webPlugin.config;\n    const Plugins = cap.Plugins;\n    if (!config || !config.name) {\n        // TODO: add link to upgrade guide\n        throw new Error(`Capacitor WebPlugin is using the deprecated \"registerWebPlugin()\" function, but without the config. Please use \"registerPlugin()\" instead to register this web plugin.\"`);\n    }\n    // TODO: add link to upgrade guide\n    console.warn(`Capacitor plugin \"${config.name}\" is using the deprecated \"registerWebPlugin()\" function`);\n    if (!Plugins[config.name] || ((_a = config === null || config === void 0 ? void 0 : config.platforms) === null || _a === void 0 ? void 0 : _a.includes(cap.getPlatform()))) {\n        // Add the web plugin into the plugins registry if there already isn't\n        // an existing one. If it doesn't already exist, that means\n        // there's no existing native implementation for it.\n        // - OR -\n        // If we already have a plugin registered (meaning it was defined in the native layer),\n        // then we should only overwrite it if the corresponding web plugin activates on\n        // a certain platform. For example: Geolocation uses the WebPlugin on Android but not iOS\n        Plugins[config.name] = webPlugin;\n    }\n};\n\nvar ExceptionCode;\n(function (ExceptionCode) {\n    /**\n     * API is not implemented.\n     *\n     * This usually means the API can't be used because it is not implemented for\n     * the current platform.\n     */\n    ExceptionCode[\"Unimplemented\"] = \"UNIMPLEMENTED\";\n    /**\n     * API is not available.\n     *\n     * This means the API can't be used right now because:\n     *   - it is currently missing a prerequisite, such as network connectivity\n     *   - it requires a particular platform or browser version\n     */\n    ExceptionCode[\"Unavailable\"] = \"UNAVAILABLE\";\n})(ExceptionCode || (ExceptionCode = {}));\nclass CapacitorException extends Error {\n    constructor(message, code) {\n        super(message);\n        this.message = message;\n        this.code = code;\n    }\n}\nconst getPlatformId = (win) => {\n    var _a, _b;\n    if (win === null || win === void 0 ? void 0 : win.androidBridge) {\n        return 'android';\n    }\n    else if ((_b = (_a = win === null || win === void 0 ? void 0 : win.webkit) === null || _a === void 0 ? void 0 : _a.messageHandlers) === null || _b === void 0 ? void 0 : _b.bridge) {\n        return 'ios';\n    }\n    else {\n        return 'web';\n    }\n};\n\nconst createCapacitor = (win) => {\n    var _a, _b, _c, _d, _e;\n    const capCustomPlatform = win.CapacitorCustomPlatform || null;\n    const cap = win.Capacitor || {};\n    const Plugins = (cap.Plugins = cap.Plugins || {});\n    /**\n     * @deprecated Use `capCustomPlatform` instead, default functions like registerPlugin will function with the new object.\n     */\n    const capPlatforms = win.CapacitorPlatforms;\n    const defaultGetPlatform = () => {\n        return capCustomPlatform !== null\n            ? capCustomPlatform.name\n            : getPlatformId(win);\n    };\n    const getPlatform = ((_a = capPlatforms === null || capPlatforms === void 0 ? void 0 : capPlatforms.currentPlatform) === null || _a === void 0 ? void 0 : _a.getPlatform) || defaultGetPlatform;\n    const defaultIsNativePlatform = () => getPlatform() !== 'web';\n    const isNativePlatform = ((_b = capPlatforms === null || capPlatforms === void 0 ? void 0 : capPlatforms.currentPlatform) === null || _b === void 0 ? void 0 : _b.isNativePlatform) || defaultIsNativePlatform;\n    const defaultIsPluginAvailable = (pluginName) => {\n        const plugin = registeredPlugins.get(pluginName);\n        if (plugin === null || plugin === void 0 ? void 0 : plugin.platforms.has(getPlatform())) {\n            // JS implementation available for the current platform.\n            return true;\n        }\n        if (getPluginHeader(pluginName)) {\n            // Native implementation available.\n            return true;\n        }\n        return false;\n    };\n    const isPluginAvailable = ((_c = capPlatforms === null || capPlatforms === void 0 ? void 0 : capPlatforms.currentPlatform) === null || _c === void 0 ? void 0 : _c.isPluginAvailable) ||\n        defaultIsPluginAvailable;\n    const defaultGetPluginHeader = (pluginName) => { var _a; return (_a = cap.PluginHeaders) === null || _a === void 0 ? void 0 : _a.find(h => h.name === pluginName); };\n    const getPluginHeader = ((_d = capPlatforms === null || capPlatforms === void 0 ? void 0 : capPlatforms.currentPlatform) === null || _d === void 0 ? void 0 : _d.getPluginHeader) || defaultGetPluginHeader;\n    const handleError = (err) => win.console.error(err);\n    const pluginMethodNoop = (_target, prop, pluginName) => {\n        return Promise.reject(`${pluginName} does not have an implementation of \"${prop}\".`);\n    };\n    const registeredPlugins = new Map();\n    const defaultRegisterPlugin = (pluginName, jsImplementations = {}) => {\n        const registeredPlugin = registeredPlugins.get(pluginName);\n        if (registeredPlugin) {\n            console.warn(`Capacitor plugin \"${pluginName}\" already registered. Cannot register plugins twice.`);\n            return registeredPlugin.proxy;\n        }\n        const platform = getPlatform();\n        const pluginHeader = getPluginHeader(pluginName);\n        let jsImplementation;\n        const loadPluginImplementation = async () => {\n            if (!jsImplementation && platform in jsImplementations) {\n                jsImplementation =\n                    typeof jsImplementations[platform] === 'function'\n                        ? (jsImplementation = await jsImplementations[platform]())\n                        : (jsImplementation = jsImplementations[platform]);\n            }\n            else if (capCustomPlatform !== null &&\n                !jsImplementation &&\n                'web' in jsImplementations) {\n                jsImplementation =\n                    typeof jsImplementations['web'] === 'function'\n                        ? (jsImplementation = await jsImplementations['web']())\n                        : (jsImplementation = jsImplementations['web']);\n            }\n            return jsImplementation;\n        };\n        const createPluginMethod = (impl, prop) => {\n            var _a, _b;\n            if (pluginHeader) {\n                const methodHeader = pluginHeader === null || pluginHeader === void 0 ? void 0 : pluginHeader.methods.find(m => prop === m.name);\n                if (methodHeader) {\n                    if (methodHeader.rtype === 'promise') {\n                        return (options) => cap.nativePromise(pluginName, prop.toString(), options);\n                    }\n                    else {\n                        return (options, callback) => cap.nativeCallback(pluginName, prop.toString(), options, callback);\n                    }\n                }\n                else if (impl) {\n                    return (_a = impl[prop]) === null || _a === void 0 ? void 0 : _a.bind(impl);\n                }\n            }\n            else if (impl) {\n                return (_b = impl[prop]) === null || _b === void 0 ? void 0 : _b.bind(impl);\n            }\n            else {\n                throw new CapacitorException(`\"${pluginName}\" plugin is not implemented on ${platform}`, ExceptionCode.Unimplemented);\n            }\n        };\n        const createPluginMethodWrapper = (prop) => {\n            let remove;\n            const wrapper = (...args) => {\n                const p = loadPluginImplementation().then(impl => {\n                    const fn = createPluginMethod(impl, prop);\n                    if (fn) {\n                        const p = fn(...args);\n                        remove = p === null || p === void 0 ? void 0 : p.remove;\n                        return p;\n                    }\n                    else {\n                        throw new CapacitorException(`\"${pluginName}.${prop}()\" is not implemented on ${platform}`, ExceptionCode.Unimplemented);\n                    }\n                });\n                if (prop === 'addListener') {\n                    p.remove = async () => remove();\n                }\n                return p;\n            };\n            // Some flair ✨\n            wrapper.toString = () => `${prop.toString()}() { [capacitor code] }`;\n            Object.defineProperty(wrapper, 'name', {\n                value: prop,\n                writable: false,\n                configurable: false,\n            });\n            return wrapper;\n        };\n        const addListener = createPluginMethodWrapper('addListener');\n        const removeListener = createPluginMethodWrapper('removeListener');\n        const addListenerNative = (eventName, callback) => {\n            const call = addListener({ eventName }, callback);\n            const remove = async () => {\n                const callbackId = await call;\n                removeListener({\n                    eventName,\n                    callbackId,\n                }, callback);\n            };\n            const p = new Promise(resolve => call.then(() => resolve({ remove })));\n            p.remove = async () => {\n                console.warn(`Using addListener() without 'await' is deprecated.`);\n                await remove();\n            };\n            return p;\n        };\n        const proxy = new Proxy({}, {\n            get(_, prop) {\n                switch (prop) {\n                    // https://github.com/facebook/react/issues/20030\n                    case '$$typeof':\n                        return undefined;\n                    case 'toJSON':\n                        return () => ({});\n                    case 'addListener':\n                        return pluginHeader ? addListenerNative : addListener;\n                    case 'removeListener':\n                        return removeListener;\n                    default:\n                        return createPluginMethodWrapper(prop);\n                }\n            },\n        });\n        Plugins[pluginName] = proxy;\n        registeredPlugins.set(pluginName, {\n            name: pluginName,\n            proxy,\n            platforms: new Set([\n                ...Object.keys(jsImplementations),\n                ...(pluginHeader ? [platform] : []),\n            ]),\n        });\n        return proxy;\n    };\n    const registerPlugin = ((_e = capPlatforms === null || capPlatforms === void 0 ? void 0 : capPlatforms.currentPlatform) === null || _e === void 0 ? void 0 : _e.registerPlugin) || defaultRegisterPlugin;\n    // Add in convertFileSrc for web, it will already be available in native context\n    if (!cap.convertFileSrc) {\n        cap.convertFileSrc = filePath => filePath;\n    }\n    cap.getPlatform = getPlatform;\n    cap.handleError = handleError;\n    cap.isNativePlatform = isNativePlatform;\n    cap.isPluginAvailable = isPluginAvailable;\n    cap.pluginMethodNoop = pluginMethodNoop;\n    cap.registerPlugin = registerPlugin;\n    cap.Exception = CapacitorException;\n    cap.DEBUG = !!cap.DEBUG;\n    cap.isLoggingEnabled = !!cap.isLoggingEnabled;\n    // Deprecated props\n    cap.platform = cap.getPlatform();\n    cap.isNative = cap.isNativePlatform();\n    return cap;\n};\nconst initCapacitorGlobal = (win) => (win.Capacitor = createCapacitor(win));\n\nconst Capacitor = /*#__PURE__*/ initCapacitorGlobal(typeof globalThis !== 'undefined'\n    ? globalThis\n    : typeof self !== 'undefined'\n        ? self\n        : typeof window !== 'undefined'\n            ? window\n            : typeof global !== 'undefined'\n                ? global\n                : {});\nconst registerPlugin = Capacitor.registerPlugin;\n/**\n * @deprecated Provided for backwards compatibility for Capacitor v2 plugins.\n * Capacitor v3 plugins should import the plugin directly. This \"Plugins\"\n * export is deprecated in v3, and will be removed in v4.\n */\nconst Plugins = Capacitor.Plugins;\n/**\n * Provided for backwards compatibility. Use the registerPlugin() API\n * instead, and provide the web plugin as the \"web\" implmenetation.\n * For example\n *\n * export const Example = registerPlugin('Example', {\n *   web: () => import('./web').then(m => new m.Example())\n * })\n *\n * @deprecated Deprecated in v3, will be removed from v4.\n */\nconst registerWebPlugin = (plugin) => legacyRegisterWebPlugin(Capacitor, plugin);\n\n/**\n * Base class web plugins should extend.\n */\nclass WebPlugin {\n    constructor(config) {\n        this.listeners = {};\n        this.windowListeners = {};\n        if (config) {\n            // TODO: add link to upgrade guide\n            console.warn(`Capacitor WebPlugin \"${config.name}\" config object was deprecated in v3 and will be removed in v4.`);\n            this.config = config;\n        }\n    }\n    addListener(eventName, listenerFunc) {\n        const listeners = this.listeners[eventName];\n        if (!listeners) {\n            this.listeners[eventName] = [];\n        }\n        this.listeners[eventName].push(listenerFunc);\n        // If we haven't added a window listener for this event and it requires one,\n        // go ahead and add it\n        const windowListener = this.windowListeners[eventName];\n        if (windowListener && !windowListener.registered) {\n            this.addWindowListener(windowListener);\n        }\n        const remove = async () => this.removeListener(eventName, listenerFunc);\n        const p = Promise.resolve({ remove });\n        Object.defineProperty(p, 'remove', {\n            value: async () => {\n                console.warn(`Using addListener() without 'await' is deprecated.`);\n                await remove();\n            },\n        });\n        return p;\n    }\n    async removeAllListeners() {\n        this.listeners = {};\n        for (const listener in this.windowListeners) {\n            this.removeWindowListener(this.windowListeners[listener]);\n        }\n        this.windowListeners = {};\n    }\n    notifyListeners(eventName, data) {\n        const listeners = this.listeners[eventName];\n        if (listeners) {\n            listeners.forEach(listener => listener(data));\n        }\n    }\n    hasListeners(eventName) {\n        return !!this.listeners[eventName].length;\n    }\n    registerWindowListener(windowEventName, pluginEventName) {\n        this.windowListeners[pluginEventName] = {\n            registered: false,\n            windowEventName,\n            pluginEventName,\n            handler: event => {\n                this.notifyListeners(pluginEventName, event);\n            },\n        };\n    }\n    unimplemented(msg = 'not implemented') {\n        return new Capacitor.Exception(msg, ExceptionCode.Unimplemented);\n    }\n    unavailable(msg = 'not available') {\n        return new Capacitor.Exception(msg, ExceptionCode.Unavailable);\n    }\n    async removeListener(eventName, listenerFunc) {\n        const listeners = this.listeners[eventName];\n        if (!listeners) {\n            return;\n        }\n        const index = listeners.indexOf(listenerFunc);\n        this.listeners[eventName].splice(index, 1);\n        // If there are no more listeners for this type of event,\n        // remove the window listener\n        if (!this.listeners[eventName].length) {\n            this.removeWindowListener(this.windowListeners[eventName]);\n        }\n    }\n    addWindowListener(handle) {\n        window.addEventListener(handle.windowEventName, handle.handler);\n        handle.registered = true;\n    }\n    removeWindowListener(handle) {\n        if (!handle) {\n            return;\n        }\n        window.removeEventListener(handle.windowEventName, handle.handler);\n        handle.registered = false;\n    }\n}\n\nconst WebView = /*#__PURE__*/ registerPlugin('WebView');\n\nexport { Capacitor, CapacitorException, CapacitorPlatforms, ExceptionCode, Plugins, WebPlugin, WebView, addPlatform, registerPlugin, registerWebPlugin, setPlatform };\n//# sourceMappingURL=index.js.map\n","export {};\n//# sourceMappingURL=definitions.js.map","import { registerPlugin } from '@capacitor/core';\nconst Network = registerPlugin('Network', {\n    web: () => import('./web').then(m => new m.NetworkWeb()),\n});\nexport * from './definitions';\nexport { Network };\n//# sourceMappingURL=index.js.map","import { Subscriber } from '../Subscriber';\nexport function retry(count = -1) {\n    return (source) => source.lift(new RetryOperator(count, source));\n}\nclass RetryOperator {\n    constructor(count, source) {\n        this.count = count;\n        this.source = source;\n    }\n    call(subscriber, source) {\n        return source.subscribe(new RetrySubscriber(subscriber, this.count, this.source));\n    }\n}\nclass RetrySubscriber extends Subscriber {\n    constructor(destination, count, source) {\n        super(destination);\n        this.count = count;\n        this.source = source;\n    }\n    error(err) {\n        if (!this.isStopped) {\n            const { source, count } = this;\n            if (count === 0) {\n                return super.error(err);\n            }\n            else if (count > -1) {\n                this.count = count - 1;\n            }\n            source.subscribe(this._unsubscribeAndRecycle());\n        }\n    }\n}\n//# sourceMappingURL=retry.js.map","/**\r\n * Capacitor v3 version of https://devdactic.com/cache-api-response-ionic/\r\n */\r\n\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { from, Observable, of, Subject, throwError } from 'rxjs';\r\nimport { map, switchMap, delay, tap, finalize, catchError } from 'rxjs/operators';\r\nimport { CachingService } from './caching.service';\r\nimport { Network } from '@capacitor/network';\r\nimport { ToastController } from '@ionic/angular';\r\nimport { User } from '../interfaces/randomusers';\r\nimport { CategoryQuestionCountResult, TriviaQuestion, CategoryQuestionCount, TriviaAnswer } from '../interfaces/opentdb';\r\nimport { TriviaCategory } from '../interfaces/opentdb';\r\nimport { ApiService2 } from './api2.service';\r\nimport { FrameData } from '@app/interfaces/gamebus';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ApiService {\r\n  private answerSubject = new Subject<TriviaAnswer>();// a stream of answers, such that on multiple pages you can display answers and call aggregations\r\n  public readonly answer$ = this.answerSubject.asObservable();\r\n\r\n  connected = true;\r\n  readonly triviaQuestionPerCategory: number = 100;\r\n  private triviaCategories: TriviaCategory[];  \r\n  private frameData: FrameData;\r\n\r\n  constructor(private http: HttpClient, private cachingService: CachingService, private toastController: ToastController, private apiService2: ApiService2) {\r\n    Network.addListener('networkStatusChange', async status => {\r\n      this.connected = status.connected;\r\n    });\r\n\r\n    // Can be removed once #17450 is resolved: https://github.com/ionic-team/ionic/issues/17450\r\n    this.toastController.create({ animated: false }).then(t => { t.present(); t.dismiss(); });\r\n  }\r\n\r\n  // App-specific API Functions\r\n  setFrameData(fd: FrameData) {\r\n    this.frameData= fd;\r\n  }\r\n\r\n  getFrameData(): FrameData {\r\n    if (this.frameData) {\r\n      return this.frameData;\r\n    } else {\r\n      console.log(\"WARNING: using mocked FrameData for use in stand-alone mode\");\r\n      return { // mock object for use outside a minigame setting\r\n        activityForm: null,\r\n        gameData: [],\r\n        scheme: null,\r\n        lastActivity: null,\r\n        negativePointsCheck: {\r\n          canFireAll: false,\r\n          items: []\r\n        }\r\n      }\r\n    }\r\n  }\r\n  \r\n  /**\r\n  * Instruct listeners to answer$ to react to changes\r\n  */\r\n  public broadcastAnswer(answer: TriviaAnswer) {\r\n    this.answerSubject.next(answer);\r\n  }\r\n\r\n  async getAllCachedAnswers(): Promise<TriviaQuestion[]> {\r\n    return this.cachingService.getAllCachedAnswers();\r\n  }\r\n\r\n  observeCachedAnswers(): Observable<TriviaQuestion[]> {\r\n    return from(this.cachingService.getAllCachedAnswers());\r\n  }\r\n\r\n  /**\r\n   * @deprecated\r\n   * @param triviaCategories \r\n   * @param forceRefresh \r\n   * @returns \r\n   */\r\n  getTriviaCategoryMetadata(triviaCategories: TriviaCategory[], forceRefresh: boolean): Observable<CategoryQuestionCountResult[]> {\r\n    let res: CategoryQuestionCountResult[] = [];\r\n    for (var cat of triviaCategories) {\r\n      const url = 'https://opentdb.com/api_count.php?category=' + cat.id;\r\n      this.getData(url, forceRefresh).subscribe(\r\n        subRes => {\r\n          res.push(subRes);\r\n        }\r\n      );\r\n    }\r\n    return of(res);\r\n  }\r\n\r\n  getTriviaQuestions(category: number, forceRefresh: boolean): Observable<TriviaQuestion[]> {\r\n    let questionsSubject = new Subject<TriviaQuestion[]>();\r\n    let questions$ = questionsSubject.asObservable();\r\n\r\n    let result: TriviaQuestion[] = [];\r\n    const categories = this.apiService2.getCategories();\r\n    categories.then(cats => {\r\n      const details = cats.find(cat => cat.id === category);\r\n      // const url = 'https://opentdb.com/api.php?amount=' + Math.min(this.triviaQuestionPerCategory, details ? details.numQuestions : 0) +\r\n      //   '&category=' + category; \r\n      //   console.log(details);\r\n      const url = 'https://my-json-server.typicode.com/lorenzo456/Diabetes-Questions/' + details.name;\r\n      this.getData(url, forceRefresh).pipe(\r\n        map(res => res['results'])\r\n      ).subscribe(subRes => {\r\n        result= subRes;\r\n        questionsSubject.next(result)\r\n      });\r\n    },\r\n      error => {\r\n        console.error(error);\r\n        throwError(error);\r\n      });\r\n      questionsSubject.next(result);\r\n    return questions$;    \r\n  }\r\n\r\n  getNumQuestionsForCategory(cat: TriviaCategory, forceRefresh: boolean): Observable<CategoryQuestionCount> {\r\n    const url = 'https://opentdb.com/api_count.php?category=' + cat.id;\r\n    return this.getData(url, forceRefresh).pipe(\r\n      map(res => res['category_question_count'])\r\n    );\r\n  }\r\n\r\n  getUsers(forceRefresh: boolean): Observable<User[]> {\r\n    const url = 'https://randomuser.me/api?results=10';\r\n    return this.getData(url, forceRefresh).pipe(\r\n      map(res => res['results'])\r\n    );\r\n  }\r\n\r\n  // Reusable Caching Functions\r\n\r\n  private getData(url, forceRefresh = false): Observable<any> {\r\n    if (!this.connected) { // Handle offline case\r\n      this.toastController.create({\r\n        message: 'You are viewing offline data.',\r\n        duration: 2000\r\n      }).then(toast => {\r\n        toast.present();\r\n      });\r\n      return from(this.cachingService.getCachedRequest(url));\r\n    } else { // Handle connected case\r\n      if (forceRefresh) {\r\n        // Make a new API call\r\n        return this.callAndCache(url);\r\n      } else {\r\n        // Check if we have cached data\r\n        const storedValue = from(this.cachingService.getCachedRequest(url));\r\n        return storedValue.pipe(\r\n          switchMap(result => {\r\n            if (!result) {\r\n              // Perform a new request since we have no data\r\n              return this.callAndCache(url);\r\n            } else {\r\n              // Return cached data\r\n              return of(result);\r\n            }\r\n          })\r\n        );\r\n      }\r\n    }\r\n  }\r\n\r\n  private callAndCache(url): Observable<any> {\r\n    return this.http.get(url).pipe(\r\n      //delay(2000), // Only for testing!\r\n      tap(res => {\r\n        // Store our new data\r\n        this.cachingService.cacheRequest(url, res);\r\n      })\r\n    )\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders, HttpErrorResponse } from '@angular/common/http';\r\nimport { CategoryQuestionCount, TriviaCategory } from '../interfaces/opentdb';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { retry, catchError, map } from 'rxjs/operators';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ApiService2 {\r\n\r\n  categories: TriviaCategory[];\r\n\r\n  // API path\r\n  base_path = 'https://opentdb.com/';\r\n  new_path = 'https://my-json-server.typicode.com/lorenzo456/Diabetes-Questions/'\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  // Http Options\r\n  httpOptions = {\r\n    headers: new HttpHeaders({\r\n      'Content-Type': 'application/json'\r\n    })\r\n  }\r\n\r\n  // Handle API errors\r\n  handleError(error: HttpErrorResponse) {\r\n    if (error.error instanceof ErrorEvent) {\r\n      // A client-side or network error occurred. Handle it accordingly.\r\n      console.error('An error occurred:', error.error.message);\r\n    } else {\r\n      // The backend returned an unsuccessful response code.\r\n      // The response body may contain clues as to what went wrong,\r\n      console.error(\r\n        `Backend returned code ${error.status}, ` +\r\n        `body was: ${error.error}`);\r\n    }\r\n    // return an observable with a user-facing error message\r\n    return throwError(\r\n      'Something bad happened; please try again later.');\r\n  };\r\n\r\n  public async getCategories(): Promise<TriviaCategory[]> {\r\n    let promise = new Promise<TriviaCategory[]>((resolve, reject) => {\r\n      if (!this.categories) {        \r\n        this.getCategories_O().toPromise().then(\r\n          cats => {\r\n            let waitForPromises:Promise<any>[]= [];\r\n            let cats2: TriviaCategory[] = cats.map(cat => {\r\n              let lastPromise= this.getCountOfCategory_O(cat.id).toPromise();\r\n              waitForPromises.push(lastPromise);\r\n              lastPromise.then(\r\n                countRes => {\r\n                  cat.numQuestions = countRes.total_question_count;                  \r\n                }\r\n              );\r\n              return cat;\r\n            });\r\n            this.categories = cats2;   \r\n            Promise.all(waitForPromises).then((promiseResults) => {\r\n              resolve(cats2);\r\n            });\r\n            \r\n          },\r\n          error => {\r\n            console.error(error);\r\n            reject(error);\r\n          });\r\n      } else {\r\n        resolve(this.categories);\r\n      }\r\n    });\r\n    return promise;\r\n\r\n  }\r\n  \r\n  private getCategories_O(): Observable<TriviaCategory[]> {\r\n    return this.http\r\n      // .get<TriviaCategory[]>(this.base_path + 'api_category.php')\r\n      .get<TriviaCategory[]>(this.new_path +'trivia_categories')\r\n      .pipe(\r\n        map(res => res['trivia_categories']),\r\n        retry(2),\r\n        catchError(this.handleError)\r\n      )\r\n  }\r\n\r\n  private getCountOfCategory_O(id: number): Observable<CategoryQuestionCount> {\r\n    return this.http\r\n      // .get<TriviaCategory[]>(this.base_path + 'api_count.php?category=' + id.toString())\r\n      .get<TriviaCategory[]>(this.new_path + 'api_count')\r\n      .pipe(\r\n        map(res => res['category_question_count']),\r\n        retry(2),\r\n        catchError(this.handleError)\r\n      )\r\n  }\r\n\r\n}","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({\r\n  name: 'unescape'\r\n})\r\nexport class UnescapePipe implements PipeTransform {\r\n\r\n  transform(value: string, ...args: string[]): string {\r\n    // via https://stackoverflow.com/questions/47378033/what-the-right-way-unescape-html-entities-in-angular\r\n    const doc = new DOMParser().parseFromString(value, 'text/html');\r\n    return doc.documentElement.textContent;\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { UnescapePipe } from './pipes/unescape.pipe';\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    UnescapePipe\r\n  ],\r\n  imports: [\r\n    CommonModule\r\n  ],\r\n  exports: [UnescapePipe]\r\n  \r\n})\r\nexport class SharedModule { }\r\n"],"sourceRoot":"webpack:///"}